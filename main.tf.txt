terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
      version = "0.61.0"
    }
  }

  backend "s3" {
    endpoint   = "storage.yandexcloud.net"
    bucket     = "tf-state-bucket-mentor"
    region     = "ru-central1-a"
    key        = "issue1/lemp.tfstate"
    access_key = "<AY-ABCD123EFGHIJKLMNOPQR>"
    secret_key = "<xYZ12abcdEfghiJklmnopQRsTuVWXYZ1234567890>"
    
    skip_region_validation      = true
    skip_credentials_validation = true
  }
}

provider "yandex" {
  token     = "<y0__wgBEJGo3d8HGMHdEyDzoKSEEj6fsYPF1wXELGCA4WB9wxQTeADp>"
  cloud_id  = "<cloud-1ab2cd3efg456>"
  folder_id = var.b1gq8u8sabj5hdf5g5r1
  zone      = "ru-central1-a"
}

resource "yandex_vpc_network" "network" {
  name = "network"
}

resource "yandex_vpc_subnet" "subnet1" {
  name           = "subnet1"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}

resource "yandex_vpc_subnet" "subnet2" {
  name           = "subnet2"
  zone           = "ru-central1-b"
  network_id     = yandex_vpc_network.network.id
  v4_cidr_blocks = ["192.168.11.0/24"]
}

resource "yandex_vpc_security_group" "example_sg" {
  name        = "example-sg"
  folder_id  = var.b1gq8u8sabj5hdf5g5r1

  ingress {
    protocol          = "tcp"
    ports             = ["80"]
    source_ip_blocks = ["0.0.0.0/0"]
  }

  egress {
    protocol          = "tcp"
    ports             = ["0-65535"]
    destination_ip_blocks = ["0.0.0.0/0"]
  }
}

resource "yandex_compute_instance" "example_instances" {
  count = 2

  name = "example-instance-${count.index}"
  zone = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8qfgrbq71dmv7o2vh6"
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.subnet1.id
    security_group_ids = [yandex_vpc_security_group.example_sg.id]
  }

  metadata = {
    ssh-keys = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC5vjWG4+JY0Ts2Q5v7+UMo+6M052qJyAEecQSB7bz2/RSssEh+mloTQkQRGSmpCZzem1/ve8nnC1qs0bFBHNk89u/lGNykVp4zaDhDe0BXHmRi9L9bO8r2AGkxj5PWkpKZCvb7f4H1fs7Mm5Xu/KYmpQuD8DsJEldedgPGSb6T1ozWozmIrpgZaTb14S37dKIVplfMfz762YSrvEgO+ygC+lrX8aKHmmqZJ0cCvM/1ZE84t0R9T9dkdYZXyGwIs//MyWx6w1xi2RWelfVvfhHnrnsyKu8gh3ZXYwNgXCDSTEmzgbIwSKgtXaPFH1lQ7AKYgEc5nj4wM8Y09wHAVZlFeE2s8F0AxNvPAobUB3EcPiOHmxit2VJqEdr5xpu+J1YcRLcU5FKp5JXh/zjJTjQyVav81bdXieB2R49YovocIN4N9VDk728udFSdCEg1vTwONeFAVvbLflGSXkQDvaTkA1pqVa71H6aFl+v6Jgn4Nub5PkCY6xc136By3urN2/U= User@DESKTOP-OOQICF6"
  }
}

resource "yandex_network_load_balancer" "nlb" {
  name = "example-nlb"
  region = "ru-central1"

  listener {
    port     = 80
    protocol = "TCP"

    target_group {
      target_ids = [for instance in yandex_compute_instance.example_instances : instance.id]
    }
  }

  external_address {
    ip_version = "ipv4"
  }
}

resource "yandex_iam_service_account" "sa" {
  folder_id = var.b1gq8u8sabj5hdf5g5r1
  name      = "sa-skillfactory"
}

resource "yandex_resourcemanager_folder_iam_member" "sa-editor" {
  folder_id = var.b1gq8u8sabj5hdf5g5r1
  role      = "storage.editor"
  member    = "serviceAccount:${aj123456abcd1234567890}"
}

resource AY-ABCD123EFGHIJKLMNOPQR" "sa-static-key" {
  service_account_id = aj123456abcd1234567890
  description        = "static access key for object storage"
}

resource "yandex_storage_bucket" "state" {
  bucket     = "tf-state-bucket-mentor"
  access_key = AY-ABCD123EFGHIJKLMNOPQR
  secret_key = xYZ12abcdEfghiJklmnopQRsTuVWXYZ1234567890
}